# =================================
# DATABASE CONFIGURATION
# =================================
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=discord_bot_platform
POSTGRES_USER=discord_bot_user
POSTGRES_PASSWORD=your_secure_password_here
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# =================================
# DISCORD BOT CONFIGURATION
# =================================
# Discord Bot Token (from Discord Developer Portal)
DISCORD_BOT_TOKEN=your_bot_token_here

# Discord Application ID
DISCORD_APPLICATION_ID=your_application_id_here

# Guild ID for RBAC (the Discord server ID where the bot operates)
DISCORD_GUILD_ID=your_guild_id_here

# =================================
# DISCORD OAUTH2 CONFIGURATION
# =================================
# Discord OAuth2 Client ID (for web app authentication)
DISCORD_CLIENT_ID=your_oauth_client_id_here

# Discord OAuth2 Client Secret
DISCORD_CLIENT_SECRET=your_oauth_client_secret_here

# Discord OAuth2 Redirect URI (should match your domain)
DISCORD_REDIRECT_URI=http://localhost:3000/auth/callback

# =================================
# FLASK API CONFIGURATION
# =================================
# Flask environment
FLASK_ENV=development

# Flask secret key for sessions (AUTO-GENERATED by setup script)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
FLASK_SECRET_KEY=your_flask_secret_key_here

# API host and port
API_HOST=0.0.0.0
API_PORT=5000

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# =================================
# FRONTEND CONFIGURATION
# =================================
# Vite development server port
VITE_PORT=3000

# API endpoint for frontend
VITE_API_URL=http://localhost:5000

# Discord OAuth2 settings for frontend
VITE_DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
VITE_DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}

# =================================
# LLM/AI CONFIGURATION
# =================================
# OpenRouter API configuration
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Default model for LLM chatbot
LLM_DEFAULT_MODEL=deepseek/deepseek-chat
LLM_FALLBACK_MODEL=anthropic/claude-3-haiku

# LLM conversation settings
LLM_MAX_CONTEXT_MESSAGES=20
LLM_MAX_TOKENS=1000

# =================================
# MEDIA API CONFIGURATION
# =================================
# TMDB API Key (for movies/TV shows)
TMDB_API_KEY=your_tmdb_api_key_here

# Anilist API configuration (OAuth2)
ANILIST_CLIENT_ID=your_anilist_client_id_here
ANILIST_CLIENT_SECRET=your_anilist_client_secret_here

# TheTVDB API configuration
TVDB_API_KEY=your_tvdb_api_key_here
TVDB_PIN=your_tvdb_pin_here

# =================================
# SECURITY CONFIGURATION
# =================================
# JWT settings for API authentication (AUTO-GENERATED by setup script)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=2592000

# Rate limiting
RATE_LIMIT_STORAGE_URL=redis://redis:6379/0
RATE_LIMIT_PER_MINUTE=60

# =================================
# REDIS CONFIGURATION (OPTIONAL)
# =================================
# Redis for caching and sessions (optional)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# =================================
# LOGGING CONFIGURATION
# =================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file paths
API_LOG_FILE=logs/api.log
BOT_LOG_FILE=logs/bot.log

# =================================
# DEVELOPMENT/TESTING
# =================================
# Enable debug mode
DEBUG=false

# Test database (for running tests)
TEST_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/test_${POSTGRES_DB}

# =================================
# DOCKER/DEPLOYMENT
# =================================
# Docker container names
POSTGRES_CONTAINER_NAME=discord_bot_postgres
API_CONTAINER_NAME=discord_bot_api
BOT_CONTAINER_NAME=discord_bot_worker
FRONTEND_CONTAINER_NAME=discord_bot_frontend
REDIS_CONTAINER_NAME=discord_bot_redis

# Network name
DOCKER_NETWORK=discord_bot_network

# Volume names
POSTGRES_VOLUME=discord_bot_postgres_data
LOGS_VOLUME=discord_bot_logs

# =================================
# FEATURE FLAGS
# =================================
# Enable/disable specific features
FEATURE_STATISTICS=true
FEATURE_GIVEAWAYS=true
FEATURE_MEDIA_SEARCH=true
FEATURE_LLM_CHAT=true
FEATURE_EMBED_MANAGEMENT=true
FEATURE_WATCH_PARTIES=true

# =================================
# NOTIFICATION SETTINGS
# =================================
# Channels for automated notifications
NOTIFICATION_CHANNEL_ID=your_notification_channel_id_here
GIVEAWAY_CHANNEL_ID=your_giveaway_channel_id_here
MEDIA_RELEASE_CHANNEL_ID=your_media_release_channel_id_here

# =================================
# SCHEDULER CONFIGURATION
# =================================
# APScheduler settings
SCHEDULER_TIMEZONE=UTC
STATS_AGGREGATION_HOUR=2
RELEASE_CHECK_HOUR=8